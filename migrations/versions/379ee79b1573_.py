"""empty message

Revision ID: 379ee79b1573
Revises: 8a40248050c6
Create Date: 2019-03-10 14:00:33.417046

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '379ee79b1573'
down_revision = '8a40248050c6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('geo_point',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('itinerary', sa.Column('odometer_at', sa.Integer(), nullable=True))
    op.add_column('itinerary', sa.Column('odometer_scale', sa.Enum('KILOMETER', 'MILE', name='distanceunit'), nullable=True))
    op.add_column('itinerary', sa.Column('travel_type', sa.String(length=32), nullable=True))
    op.drop_index('ix_itinerary_day', table_name='itinerary')
    op.drop_constraint('itinerary_ibfk_1', 'itinerary', type_='foreignkey')
    op.drop_column('itinerary', 'day')
    op.drop_column('itinerary', 'actual_stay')
    op.drop_column('itinerary', 'planned_start_point')
    op.drop_column('itinerary', 'actual_start_point')
    op.drop_column('itinerary', 'storyline_id')
    op.drop_column('itinerary', 'done')
    op.drop_column('itinerary', 'actual_end_point')
    op.drop_column('itinerary', 'planned_end_point')
    op.drop_column('itinerary', 'planning_description')
    op.drop_column('itinerary', 'actual_description')
    op.drop_column('itinerary', 'actual_distance')
    op.drop_column('itinerary', 'planned_stay')
    op.drop_column('itinerary', 'planned_distance')
    op.add_column('story', sa.Column('date_for', sa.Date(), nullable=True))
    op.create_index(op.f('ix_story_date_for'), 'story', ['date_for'], unique=False)
    op.drop_index('ix_story_timestamp', table_name='story')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_index('ix_story_timestamp', 'story', ['timestamp'], unique=False)
    op.drop_index(op.f('ix_story_date_for'), table_name='story')
    op.drop_column('story', 'date_for')
    op.add_column('itinerary', sa.Column('planned_distance', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('itinerary', sa.Column('planned_stay', mysql.VARCHAR(collation='utf8_bin', length=132), nullable=True))
    op.add_column('itinerary', sa.Column('actual_distance', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('itinerary', sa.Column('actual_description', mysql.TEXT(collation='utf8_bin'), nullable=True))
    op.add_column('itinerary', sa.Column('planning_description', mysql.TEXT(collation='utf8_bin'), nullable=True))
    op.add_column('itinerary', sa.Column('planned_end_point', mysql.VARCHAR(collation='utf8_bin', length=132), nullable=True))
    op.add_column('itinerary', sa.Column('actual_end_point', mysql.VARCHAR(collation='utf8_bin', length=132), nullable=True))
    op.add_column('itinerary', sa.Column('done', mysql.TINYINT(display_width=1), autoincrement=False, nullable=True))
    op.add_column('itinerary', sa.Column('storyline_id', mysql.INTEGER(display_width=11), autoincrement=False, nullable=True))
    op.add_column('itinerary', sa.Column('actual_start_point', mysql.VARCHAR(collation='utf8_bin', length=132), nullable=True))
    op.add_column('itinerary', sa.Column('planned_start_point', mysql.VARCHAR(collation='utf8_bin', length=132), nullable=True))
    op.add_column('itinerary', sa.Column('actual_stay', mysql.VARCHAR(collation='utf8_bin', length=132), nullable=True))
    op.add_column('itinerary', sa.Column('day', sa.DATE(), nullable=True))
    op.create_foreign_key('itinerary_ibfk_1', 'itinerary', 'storyline', ['storyline_id'], ['id'])
    op.create_index('ix_itinerary_day', 'itinerary', ['day'], unique=False)
    op.drop_column('itinerary', 'travel_type')
    op.drop_column('itinerary', 'odometer_scale')
    op.drop_column('itinerary', 'odometer_at')
    op.drop_table('geo_point')
    # ### end Alembic commands ###
